<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xmlns:context= "http://www.springframework.org/schema/context"
       xmlns:mvc= "http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://dubbo.apache.org/schema/dubbo
       http://dubbo.apache.org/schema/dubbo/dubbo.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <!--(1) 扫描Web包，应用Spring的注解-->
    <context:component-scan base-package="com.mavenweb.controller"/>

    <!-- (2)
     mvc:annotation-driven  会自动注册DefaultAnnotationHandlerMapping
    与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。-->
    <mvc:annotation-driven/>

    <!--(3) 配置视图解析器：将 ModelAndView以及字符串解析为具体的页面 -->
    <!--3.1 视图解析器的作用: 就是当 DispatcherServlet将ModelAndView传递给视图解析器的时候，将ModelAndView数据填充到相应的视图中，
    然后返回一个带有数据的视图给DispatcherServlet.
    3.2 视图解析器中有个抽象类：AbstractCachingViewResolver 它将解析过的视图进行缓存，下次再次解析的时候就会在缓存中直接寻找该视图。
    3.3  两种视图解析器：
         第一种视图解析器：UrlBasedViewResolver，继承上面这个抽象类，具有缓存功能。被第二种视图解析器替代了。
         第二种视图解析器：InternalResourceViewResolver 继承UrlBasedViewResolver，也具有缓存功能。(通常使用这个视图解析器)
    -->
    <bean class ="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--通常把jsp放在WEB-INF目录下，视图解析器会在服务器中将请求foreword到对应的视图上。-->
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

   <!-- <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>-->

    <!--配置dubbo的应用名称-->
    <!--<dubbo:application name="app-client"/>-->
    <!--配置注册中心地址-->
    <!--<dubbo:registry protocol="zookeeper" address="zookeeper://169.254.1.102:2181" />-->

    <!--配置dubbo的扫描包-->
    <!--<dubbo:annotation package="com.webapp.controller"/>-->
    <!--将控制器所在包 加入IOC容器-->



</beans>
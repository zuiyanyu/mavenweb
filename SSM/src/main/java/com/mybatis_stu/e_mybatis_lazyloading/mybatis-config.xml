<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- 配置文件的根元素
详细配置见mybatis官网：http://www.mybatis.cn/ 中的 MyBatis XML配置
-->
<!-- 配置顺序不能乱，否则报错
configuration（配置）

    properties（属性）
    settings（设置）
    typeAliases（类型别名）
    typeHandlers（类型处理器）
    objectFactory（对象工厂）
    plugins（插件）

    environments（环境配置）
        environment（环境变量）
            transactionManager（事务管理器）
            dataSource（数据源）

databaseIdProvider（数据库厂商标识）
mappers（映射器）
-->

<configuration>
    <!-- 加载java的配置文件或者声明属性信息 -->
    <properties resource="jdbcInfo.properties">
        <!--先加载此处，然后加载 jdbcInfo.properties 配置文件中的内容
        即配置文件中的内容会覆盖此处的配置-->
        <property name="db.username" value="123" />
    </properties>

    <!-- 全局配置 -->
    <settings>
        <!--具体的参数名和参数值  <setting name="" value=""/>-->
        <!-- 开启自动驼峰命名规则（camel case）映射，即从数据库列名 A_COLUMN 到属性名 aColumn 的类似映射 -->
        <setting name="mapUnderscoreToCamelCase" value="true" />

        <!--开启懒加载
        延迟加载又叫懒加载，也叫按需加载。也就是说先加载主信息，在需要的时候，再去加载从信息。
        在mybatis中，resultMap标签 的association标签和collection标签具有延迟加载的功能。-->
        <!--开启延迟加载，默认值为true-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--设置积极的懒加载，默认是true-->
        <setting name="aggressiveLazyLoading" value="false"/>

    </settings>

    <typeAliases>
        <!--类全限定名的别名映射 -->
        <!--比如：
            <select id="getUserByNo" resultType="com.mavenweb.domain.User" > 等价于
            <select id="getUserByNo" resultType="user" >  user 不区分大小写
        -->
        <package name="com.mybatis_stu.domain"></package>
    </typeAliases>


    <!-- 配置mybatis的环境信息，与spring整合，该信息由spring来管理 -->
    <environments default="development">
        <environment id="development">
            <!-- 配置JDBC事务控制，由mybatis进行管理 -->
            <transactionManager type="JDBC"></transactionManager>
            <!-- 配置数据源，采用mybatis连接池 -->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driverClass}" />
                <property name="url" value="${jdbc.jdbcUrl}" />
                <property name="username" value="${jdbc.user}" />
                <property name="password" value="${jdbc.password}" />
            </dataSource>
        </environment>
    </environments>

    <!-- 加载映射文件 -->
    <mappers>
        <!--&lt;!&ndash;单个加载&ndash;&gt;-->
        <!--<mapper resource="com/mybatis_stu/mapper/UserMapperTest.xml" />-->
        <!-- 批量加载映射文件 如果没有对应的java类，则xml加载不到-->
        <package name="com.mybatis_stu.mapper"/>
    </mappers>

</configuration>


        <!-- &lt;!&ndash; 属性：定义配置外在化 &ndash;&gt;
         <properties></properties>
         &lt;!&ndash; 设置：定义mybatis的一些全局性设置 &ndash;&gt;
         <settings>
         &lt;!&ndash; 具体的参数名和参数值 &ndash;&gt;
         <setting name="" value=""/>
         </settings>
         &lt;!&ndash; 类型名称：为一些类定义别名 &ndash;&gt;
         <typeAliases></typeAliases>
         &lt;!&ndash; 类型处理器：定义Java类型与数据库中的数据类型之间的转换关系 &ndash;&gt;
         <typeHandlers></typeHandlers>
         &lt;!&ndash; 对象工厂 &ndash;&gt;
         <objectFactory type=""></objectFactory>
         &lt;!&ndash; 插件：mybatis的插件,插件可以修改mybatis的内部运行规则 &ndash;&gt;
         <plugins>
         <plugin interceptor=""></plugin>
         </plugins>
         &lt;!&ndash; 环境：配置mybatis的环境 &ndash;&gt;
         <environments default="">
         &lt;!&ndash; 环境变量：可以配置多个环境变量，比如使用多数据源时，就需要配置多个环境变量 &ndash;&gt;
         <environment id="">
         &lt;!&ndash; 事务管理器 &ndash;&gt;
         <transactionManager type=""></transactionManager>
         &lt;!&ndash; 数据源 &ndash;&gt;
         <dataSource type=""></dataSource>
         </environment>
         </environments>
         &lt;!&ndash; 数据库厂商标识 &ndash;&gt;
         <databaseIdProvider type=""></databaseIdProvider>
         &lt;!&ndash; 映射器：指定映射文件或者映射类 &ndash;&gt;
         <mappers></mappers>-->
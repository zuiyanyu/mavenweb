package javaBase.多线程.同步器_08;

/**
 * 一个倒计时门栓（ CountDownLatch) 让一个线程集等待直到计数变为 0。倒计时门栓是
 * 一次性的。一旦计数为 0, 就不能再重用了。
 * 一个有用的特例是计数值为 1 的门栓。实现一个只能通过一次的门。线程在门外等候直
 * 到另一个线程将计数器值置为
 * 举例来讲， 假定一个线程集需要一些初始的数据来完成工作。工作器线程被启动并在门
 * 外等候。另一个线程准备数据。 当数据准备好的时候， 调用 cmmtDown, 所有工作器线程就
 * 可以继续运行了。
 * 然后
 * ， 可以使用第二个门栓检査什么时候所有工作器线程完成工作。用线程数初始化门
 * 栓。每个工作器线程在结束前将门栓计数减 1。 另一个获取工作结果的线程在门外等待， 一
 * 旦所有工作器线程终止该线程继续运行。
 */
public class 倒计时门栓 {
}
